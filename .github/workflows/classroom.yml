name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare OpenJDK
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "21"
          cache: "gradle"

      - name: Grant execute permission for gradlew
        run: 
          chmod +x gateway/gradlew;
          chmod +x libraryservice/gradlew;
          chmod +x reservationservice/gradlew;
          chmod +x ratingservice/gradlew;

      - name: Build gateway
        working-directory: gateway
        run: ./gradlew build

      - name: Build libraryservice
        working-directory: libraryservice
        run: ./gradlew build

      - name: Build reservationservice
        working-directory: reservationservice
        run: ./gradlew build

      - name: Build ratingservice
        working-directory: ratingservice
        run: ./gradlew build

      # - name: Build project
      #   uses: eskatos/gradle-command-action@v2
      #   with:
      #     arguments: clean build

  grade:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      # TODO build and run unit tests

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker compose up -d
          ./scripts/wait-script.sh
        env:
          WAIT_PORTS: 8080,8070,8060,8050

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v4/postman/collection.json
          environment: v4/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v